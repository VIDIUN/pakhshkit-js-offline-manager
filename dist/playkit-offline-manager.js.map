{"version":3,"sources":["./offline-manager/webpack/universalModuleDefinition","./offline-manager/playkit-offline-manager.js","./offline-manager/webpack/bootstrap fa7b71a4447b20cbd7da","./offline-manager/./utils/logger.js","./offline-manager/external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"playkit\",\"core\"]}","./offline-manager/./index.js","./offline-manager/./offline-manager.js","./offline-manager/./shaka-offline-wrapper.js","./offline-manager/external {\"commonjs\":\"shaka-player\",\"commonjs2\":\"shaka-player\",\"amd\":\"shaka-player\",\"root\":\"shaka\"}","./offline-manager/./db-manager.js","./offline-manager/../node_modules/idb/lib/idb.js","./offline-manager/../node_modules/js-logger/src/logger.js","./offline-manager/external {\"commonjs\":\"playkit-js-providers\",\"commonjs2\":\"playkit-js-providers\",\"amd\":\"playkit-js-providers\",\"root\":[\"playkit\",\"providers\"]}"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_9__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","getLogger","JsLogger","getLogLevel","getLevel","setLogLevel","level","setLevel","value","LogLevel","undefined","_jsLogger","obj","newObj","key","default","DEBUG","INFO","TIME","WARN","ERROR","OFF","useDefaults","defaultLevel","NAME","VERSION","_offlineManager","_offlineManager2","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","writable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_shakaOfflineWrapper","_playkitJsProviders","_playkitJs","_logger","_logger2","OfflineManager","_FakeEventTarget","config","logLevel","debug","_this","getPrototypeOf","_downloads","_config","_eventManager","EventManager","_setOfflineAdapter","_this2","ShakaOfflineWrapper","listen","PROGRESS_EVENT","e","dispatchEvent","mediaInfo","_this3","entryId","Promise","resolve","reject","sources","dash","Provider","provider","getMediaConfig","then","mediaConfig","Utils","hasPropertyPath","sourceData","pause","resume","url","options","download","remove","getDataByEntry","getAllDownloads","_this4","promises","downloads","forEach","push","all","_this5","destroy","FakeEventTarget","_interopRequireDefault","_shakaPlayer","_shakaPlayer2","_dbManager","_dbManager2","downloadStates","DOWNLOADING","PAUSED","RESUMED","ENDED","actions","PAUSE","RESUME","DELETE","DOWNLOAD_START","DOWNLOAD_END","_dtgVideoElement","document","createElement","polyfill","installAll","_dtgShaka","Player","log","Level","adapterName","adapterVersion","playerVersion","_currentlyDownloaded","currentDownload","state","_configureDrmIfNeeded","_doesEntryExists","existsInDB","_initStorage","storage","store","offlineManifest","downloadStatus","offlineUri","add","_prepareItemForStorage","action","catch","includes","update","_setSessionData","manifestDB","ob","DELETED","getAll","entry","drmData","servers","val","scheme","licenseUrl","configure","drm","keysToDelete","storeObj","assign","_this6","dbData","data","arguments","offline","Storage","configuration","usePersistentLicense","progressCallback","_setDownloadProgress","trackSelectionCallback","_this7","content","progress","event","FakeEvent","detail","_idb","_idb2","DB_NAME","DBManager","window","open","dbPromise","upgradeDb","objectStoreNames","contains","createObjectStore","keyPath","storeName","item","db","tx","transaction","objectStore","_addConfigToItem","put","complete","delete","allObjs","toArray","arr","Array","slice","promisifyRequest","request","onsuccess","result","onerror","error","promisifyRequestCall","method","args","apply","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","prop","set","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","oldVersion","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","callback","nativeObject","query","count","items","iterateCursor","continue","exp","version","upgradeCallback","indexedDB","onupgradeneeded","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","Logger","logHandler","contextualLoggersByNameMap","bind","scope","func","merge","defineLogLevel","ContextualLogger","defaultContext","context","filterLevel","info","newLevel","enabledFor","lvl","invoke","warn","time","label","timeEnd","msgArgs","globalLogger","L","setHandler","createDefaultHandler","formatter","messages","unshift","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","Function","console","timerLabel","Date","getTime"],"mappings":"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","file":"playkit-offline-manager.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"), require(\"shaka-player\"), require(\"playkit-js-providers\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\", \"shaka-player\", \"playkit-js-providers\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OfflineManager\"] = factory(require(\"playkit-js\"), require(\"shaka-player\"), require(\"playkit-js-providers\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"OfflineManager\"] = factory(root[\"playkit\"][\"core\"], root[\"shaka\"], root[\"playkit\"][\"providers\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"), require(\"shaka-player\"), require(\"playkit-js-providers\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\", \"shaka-player\", \"playkit-js-providers\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OfflineManager\"] = factory(require(\"playkit-js\"), require(\"shaka-player\"), require(\"playkit-js-providers\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"OfflineManager\"] = factory(root[\"playkit\"][\"core\"], root[\"shaka\"], root[\"playkit\"][\"providers\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setLogLevel = exports.getLogLevel = exports.LogLevel = undefined;\n\nvar _jsLogger = __webpack_require__(8);\n\nvar JsLogger = _interopRequireWildcard(_jsLogger);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar LogLevel = {\n  DEBUG: JsLogger.DEBUG,\n  INFO: JsLogger.INFO,\n  TIME: JsLogger.TIME,\n  WARN: JsLogger.WARN,\n  ERROR: JsLogger.ERROR,\n  OFF: JsLogger.OFF\n};\n\n\nJsLogger.useDefaults({ defaultLevel: JsLogger.ERROR });\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name) {\n  if (!name) {\n    return JsLogger;\n  }\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name) {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level, name) {\n  getLogger(name).setLevel(level);\n}\n\nexports.default = getLogger;\nexports.LogLevel = LogLevel;\nexports.getLogLevel = getLogLevel;\nexports.setLogLevel = setLogLevel;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NAME = exports.VERSION = undefined;\n\nvar _offlineManager = __webpack_require__(3);\n\nvar _offlineManager2 = _interopRequireDefault(_offlineManager);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _offlineManager2.default;\nexports.VERSION = \"1.0.0\";\nexports.NAME = \"playkit-js-offline-manager\";\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shakaOfflineWrapper = __webpack_require__(4);\n\nvar _playkitJsProviders = __webpack_require__(9);\n\nvar _playkitJs = __webpack_require__(1);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Your class description.\n * @classdesc\n */\nvar OfflineManager = function (_FakeEventTarget) {\n  _inherits(OfflineManager, _FakeEventTarget);\n\n  _createClass(OfflineManager, null, [{\n    key: 'isValid',\n\n\n    /**\n     * TODO: Define under what conditions the plugin is valid.\n     * @static\n     * @public\n     * @returns {boolean} - Whether the plugin is valid.\n     */\n    value: function isValid() {\n      return true;\n    }\n\n    /**\n     * @constructor\n     * @param {Object} config - The plugin config.\n     */\n\n  }]);\n\n  function OfflineManager(config) {\n    _classCallCheck(this, OfflineManager);\n\n    if (config.logLevel && _logger.LogLevel[config.logLevel]) {\n      (0, _logger.setLogLevel)(_logger.LogLevel[config.logLevel]);\n    }\n    OfflineManager._logger.debug('offline manager created');\n\n    var _this = _possibleConstructorReturn(this, (OfflineManager.__proto__ || Object.getPrototypeOf(OfflineManager)).call(this));\n\n    if (_this._downloads) {\n      return _possibleConstructorReturn(_this);\n    }\n    // this.config = config;\n    _this._downloads = {};\n    _this._config = config;\n    _this._eventManager = new _playkitJs.EventManager();\n    _this._setOfflineAdapter();\n    return _this;\n  }\n\n  _createClass(OfflineManager, [{\n    key: '_setOfflineAdapter',\n    value: function _setOfflineAdapter() {\n      var _this2 = this;\n\n      this._offlineManager = new _shakaOfflineWrapper.ShakaOfflineWrapper(this._downloads, this._config);\n      this._eventManager.listen(this._offlineManager, _shakaOfflineWrapper.PROGRESS_EVENT, function (e) {\n        _this2.dispatchEvent(e);\n      });\n    }\n  }, {\n    key: 'getMediaInfo',\n    value: function getMediaInfo(mediaInfo) {\n      var _this3 = this;\n\n      OfflineManager._logger.debug('getMediaInfo', mediaInfo.entryId);\n      return new Promise(function (resolve, reject) {\n        if (_this3._downloads[mediaInfo.entryId]) {\n          return resolve(_this3._downloads[mediaInfo.entryId].sources.dash[0]);\n        }\n        var provider = new _playkitJsProviders.Provider(_this3._config.provider);\n        return provider.getMediaConfig(mediaInfo).then(function (mediaConfig) {\n          OfflineManager._logger.debug('after provider.getMediaConfig');\n          if (_playkitJs.Utils.Object.hasPropertyPath(mediaConfig, 'sources.dash') && mediaConfig.sources.dash.length > 0) {\n            var sourceData = mediaConfig.sources.dash[0];\n            sourceData.entryId = mediaInfo.entryId;\n            _this3._downloads[mediaInfo.entryId] = mediaConfig;\n            return resolve(sourceData);\n          } else {\n            OfflineManager._logger.debug('getMediaInfo error');\n            return reject(\"getMediaInfo error\");\n          }\n        });\n      });\n    }\n  }, {\n    key: 'pause',\n    value: function pause(entryId) {\n      OfflineManager._logger.debug('pause', entryId);\n      return this._offlineManager.pause(entryId);\n    }\n  }, {\n    key: 'resume',\n    value: function resume(entryId) {\n      OfflineManager._logger.debug('resume', entryId);\n      return this._offlineManager.resume(entryId);\n    }\n  }, {\n    key: 'download',\n    value: function download(url, options) {\n      OfflineManager._logger.debug('download', url);\n      return this._offlineManager.download(url, options);\n    }\n  }, {\n    key: 'remove',\n    value: function remove(entryId) {\n      OfflineManager._logger.debug('remove', entryId);\n      return this._offlineManager.remove(entryId);\n    }\n  }, {\n    key: 'getMediaInfoFromDB',\n    value: function getMediaInfoFromDB(entryId) {\n      OfflineManager._logger.debug('getMediaInfoFromDB', entryId);\n      return this._offlineManager.getDataByEntry(entryId);\n    }\n  }, {\n    key: 'getAllDownloads',\n    value: function getAllDownloads() {\n      return this._offlineManager.getAllDownloads();\n    }\n  }, {\n    key: 'removeAll',\n    value: function removeAll() {\n      var _this4 = this;\n\n      var promises = [];\n      return this.getAllDownloads().then(function (downloads) {\n        downloads.forEach(function (download) {\n          promises.push(_this4.remove(download.entryId));\n        });\n        _this4._downloads = {};\n        return Promise.all(promises);\n      });\n    }\n  }, {\n    key: 'pauseAll',\n    value: function pauseAll() {\n      var _this5 = this;\n\n      var promises = [];\n      return this.getAllDownloads().then(function (downloads) {\n        downloads.forEach(function (download) {\n          promises.push(_this5.pause(download.entryId));\n        });\n        return Promise.all(promises);\n      });\n    }\n\n    /**\n     * TODO: Define the destroy logic of your plugin.\n     * Destroys the plugin.\n     * @override\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      // Write logic\n      this._eventManager.destroy();\n    }\n\n    /**\n     * TODO: Define the reset logic of your plugin.\n     * Resets the plugin.\n     * @override\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      // Write logic\n    }\n  }]);\n\n  return OfflineManager;\n}(_playkitJs.FakeEventTarget);\n\nOfflineManager._logger = (0, _logger2.default)('OfflineManager');\nexports.default = OfflineManager;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShakaOfflineWrapper = exports.PROGRESS_EVENT = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shakaPlayer = __webpack_require__(5);\n\nvar _shakaPlayer2 = _interopRequireDefault(_shakaPlayer);\n\nvar _dbManager = __webpack_require__(6);\n\nvar _dbManager2 = _interopRequireDefault(_dbManager);\n\nvar _playkitJs = __webpack_require__(1);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //flow\n\n\nvar downloadStates = {\n  DOWNLOADING: 'downloading',\n  PAUSED: 'paused',\n  RESUMED: 'resumed',\n  ENDED: 'ended'\n};\n\nvar actions = {\n  PAUSE: 'pause',\n  RESUME: 'resume',\n  DELETE: 'delete',\n  DOWNLOAD_START: 'downloadStart',\n  DOWNLOAD_END: 'downloadEnd'\n};\n\nvar ENTRIES_MAP_STORE_NAME = 'entriesMap';\n\nvar PROGRESS_EVENT = exports.PROGRESS_EVENT = 'progress';\n\nvar ShakaOfflineWrapper = exports.ShakaOfflineWrapper = function (_FakeEventTarget) {\n  _inherits(ShakaOfflineWrapper, _FakeEventTarget);\n\n  function ShakaOfflineWrapper(downloads) {\n    _classCallCheck(this, ShakaOfflineWrapper);\n\n    var _this = _possibleConstructorReturn(this, (ShakaOfflineWrapper.__proto__ || Object.getPrototypeOf(ShakaOfflineWrapper)).call(this));\n\n    ShakaOfflineWrapper._logger.debug('ShakaOfflineWrapper created');\n    _this._dtgVideoElement = document.createElement('video');\n    _shakaPlayer2.default.polyfill.installAll();\n\n    _this._dtgShaka = new _shakaPlayer2.default.Player(_this._dtgVideoElement);\n    if (_shakaPlayer2.default.log) {\n      _shakaPlayer2.default.log.setLevel(_shakaPlayer2.default.log.Level.DEBUG);\n    }\n\n    _this._dbManager = new _dbManager2.default({\n      adapterName: 'shaka',\n      adapterVersion: \"\", //player.version,\n      playerVersion: \"\" //player.version\n    });\n    _this._downloads = downloads;\n    _this._currentlyDownloaded = [];\n    return _this;\n  }\n\n  _createClass(ShakaOfflineWrapper, [{\n    key: 'download',\n    value: function download(entryId, options) {\n      var _this2 = this;\n\n      ShakaOfflineWrapper._logger.debug('download', entryId);\n      var currentDownload = this._downloads[entryId];\n      if (currentDownload.state) {\n        return Promise.reject(\"already downloading / resuming / paused\");\n      }\n      this._configureDrmIfNeeded(entryId);\n      this._currentlyDownloaded.push(entryId);\n      this._doesEntryExists(entryId).then(function (existsInDB) {\n        if (existsInDB) {\n          return Promise.reject(\"already downloading / paused\");\n        }\n        currentDownload['storage'] = _this2._initStorage(entryId, options);\n        currentDownload['state'] = downloadStates.DOWNLOADING;\n        return currentDownload.storage.store(currentDownload.sources.dash[0].url, {}).then(function (offlineManifest) {\n          ShakaOfflineWrapper._logger.debug('after storage.store', entryId);\n          currentDownload.state = offlineManifest.downloadStatus === downloadStates.PAUSED ? downloadStates.PAUSED : downloadStates.ENDED;\n          currentDownload.sources.dash[0].url = offlineManifest.offlineUri;\n          return _this2._dbManager.add(ENTRIES_MAP_STORE_NAME, entryId, _this2._prepareItemForStorage(currentDownload)).then(function () {\n            ShakaOfflineWrapper._logger.debug('after dbManager.add', entryId);\n            Promise.resolve({\n              action: actions.DOWNLOAD_START,\n              entryId: entryId\n            });\n          });\n        });\n      }).catch(function (e) {\n        Promise.reject(e);\n      });\n    }\n  }, {\n    key: 'pause',\n    value: function pause(entryId) {\n      var _this3 = this;\n\n      ShakaOfflineWrapper._logger.debug('pause', entryId);\n      var currentDownload = this._downloads[entryId];\n      if (!currentDownload) {\n        return Promise.resolve(\"not downloading / resuming\"); //TODO LOG THIS (until background fetch is here)\n      } else {\n        if ([downloadStates.DOWNLOADING, downloadStates.RESUMED].includes(currentDownload.state)) {\n          return currentDownload.storage.pause().then(function () {\n            ShakaOfflineWrapper._logger.debug('after storage.pause', entryId);\n            currentDownload.state = downloadStates.PAUSED;\n            return _this3._dbManager.update(ENTRIES_MAP_STORE_NAME, entryId, _this3._prepareItemForStorage(currentDownload)).then(function () {\n              ShakaOfflineWrapper._logger.debug('after dbManager.update', entryId);\n              Promise.resolve({\n                entryId: entryId,\n                action: actions.PAUSE\n              });\n            });\n          }).catch(function (e) {\n            Promise.reject(e);\n          });\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }\n  }, {\n    key: 'resume',\n    value: function resume(entryId) {\n      var _this4 = this;\n\n      ShakaOfflineWrapper._logger.debug('resume', entryId);\n      return this._setSessionData(entryId).then(function () {\n        var currentDownload = _this4._downloads[entryId];\n        if (currentDownload.state === downloadStates.PAUSED) {\n          currentDownload.state = downloadStates.RESUMED;\n          currentDownload.storage.resume(currentDownload.sources.dash[0].url).then(function (manifestDB) {\n            ShakaOfflineWrapper._logger.debug('after storage.resume', entryId);\n            currentDownload.state = [manifestDB.downloadStatus, manifestDB.ob].includes(downloadStates.ENDED) ? downloadStates.ENDED : downloadStates.PAUSED;\n            _this4._dbManager.update(ENTRIES_MAP_STORE_NAME, entryId, _this4._prepareItemForStorage(currentDownload)).then(function () {\n              ShakaOfflineWrapper._logger.debug('after dbManager.update', entryId);\n              return Promise.resolve({\n                action: actions.RESUME,\n                entryId: entryId\n              });\n            });\n          });\n        } else {\n          Promise.reject(\"already resumed / downloaded\");\n        }\n      }).catch(function (e) {\n        Promise.reject(e);\n      });\n    }\n  }, {\n    key: 'remove',\n    value: function remove(entryId) {\n      var _this5 = this;\n\n      ShakaOfflineWrapper._logger.debug('remove', entryId);\n      return this._setSessionData(entryId).then(function () {\n        var currentDownload = _this5._downloads[entryId];\n        if (!currentDownload.state) return Promise.reject(\"Entry not found\");\n        currentDownload.storage.remove(currentDownload.sources.dash[0].url).then(function () {\n          ShakaOfflineWrapper._logger.debug('after storage.remove', entryId);\n          _this5._dbManager.remove(ENTRIES_MAP_STORE_NAME, entryId).then(function () {\n            ShakaOfflineWrapper._logger.debug('after dbManager.remove', entryId);\n            delete _this5._downloads[entryId];\n            return Promise.resolve({\n              action: actions.DELETED,\n              entryId: entryId\n            });\n          });\n        });\n      }).catch(function (e) {\n        Promise.reject(e);\n      });\n    }\n  }, {\n    key: 'getDataByEntry',\n    value: function getDataByEntry(entryId) {\n      return this._dbManager.get(ENTRIES_MAP_STORE_NAME, entryId);\n    }\n  }, {\n    key: 'getAllDownloads',\n    value: function getAllDownloads() {\n      return this._dbManager.getAll(ENTRIES_MAP_STORE_NAME);\n    }\n  }, {\n    key: '_doesEntryExists',\n    value: function _doesEntryExists(entryId) {\n      return this.getDataByEntry(entryId).then(function (entry) {\n        return Promise.resolve(entry && entry.state);\n      });\n    }\n  }, {\n    key: '_configureDrmIfNeeded',\n    value: function _configureDrmIfNeeded(entryId) {\n      ShakaOfflineWrapper._logger.debug('_configureDrmIfNeeded', entryId);\n      var currentDownload = this._downloads[entryId];\n      var drmData = currentDownload.sources.dash[0].drmData;\n      if (drmData) {\n        var servers = {};\n        drmData.forEach(function (val) {\n          servers[val.scheme] = val.licenseUrl;\n        });\n        this._dtgShaka.configure({ 'drm': { 'servers': servers } });\n      } else {\n        this._dtgShaka.configure({});\n      }\n    }\n  }, {\n    key: '_prepareItemForStorage',\n    value: function _prepareItemForStorage(object) {\n      var keysToDelete = [\"storage\", \"url\", \"mimetype\"];\n      var storeObj = Object.assign({}, object);\n      for (var key in storeObj) {\n        if (keysToDelete.includes(key)) {\n          delete storeObj[key];\n        }\n      }\n      return storeObj;\n    }\n  }, {\n    key: '_setSessionData',\n    value: function _setSessionData(entryId) {\n      var _this6 = this;\n\n      ShakaOfflineWrapper._logger.debug('_setSessionData', entryId);\n      if (this._downloads[entryId]) {\n        return Promise.resolve();\n      }\n      return this.getDataByEntry(entryId).then(function (dbData) {\n        var data = Object.assign({}, dbData);\n        data['storage'] = _this6._initStorage(entryId);\n        _this6._downloads[entryId] = data;\n        return Promise.resolve();\n      });\n    }\n  }, {\n    key: '_initStorage',\n    value: function _initStorage(entryId) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      ShakaOfflineWrapper._logger.debug('_initStorage', entryId);\n      var storage = new _shakaPlayer2.default.offline.Storage(this._dtgShaka);\n      var configuration = {\n        usePersistentLicense: true,\n        progressCallback: this._setDownloadProgress(entryId)\n      };\n      if (options && options.trackSelectionCallback) {\n        configuration[\"trackSelectionCallback\"] = options.trackSelectionCallback;\n      }\n      storage.configure(configuration);\n      return storage;\n    }\n  }, {\n    key: '_setDownloadProgress',\n    value: function _setDownloadProgress(entryId) {\n      var _this7 = this;\n\n      ShakaOfflineWrapper._logger.debug('_setDownloadProgress', entryId);\n      return function (content, progress) {\n        var event = new _playkitJs.FakeEvent(PROGRESS_EVENT, {\n          detail: {\n            content: content,\n            progress: progress * 100,\n            entryId: entryId\n          }\n        });\n        _this7.dispatchEvent(event);\n      };\n    }\n  }]);\n\n  return ShakaOfflineWrapper;\n}(_playkitJs.FakeEventTarget);\n\nShakaOfflineWrapper._logger = (0, _logger2.default)('ShakaOfflineWrapper');\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _idb = __webpack_require__(7);\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nvar _logger = __webpack_require__(0);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KEY_PATH = 'entryId';\nvar ENTRIES_MAP_STORE_NAME = 'entriesMap';\nvar DB_NAME = 'offline-manager';\n/**\n * Your class description.\n * @classdesc\n */\n\nvar DBManager = function () {\n  /**\n   * @constructor\n   * @param {Object} config - The plugin config.\n   */\n  function DBManager(config) {\n    _classCallCheck(this, DBManager);\n\n    DBManager._logger.debug('DBManager created');\n    if (!('indexedDB' in window)) {\n      // console.log('This browser doesn\\'t support IndexedDB');\n      return;\n    }\n    this.config = config;\n    this.open(DB_NAME);\n  }\n\n  _createClass(DBManager, [{\n    key: 'open',\n    value: function open(store) {\n      this.dbPromise = _idb2.default.open(store, 1, function (upgradeDb) {\n        DBManager._logger.debug('open');\n        if (!upgradeDb.objectStoreNames.contains(ENTRIES_MAP_STORE_NAME)) {\n          upgradeDb.createObjectStore(ENTRIES_MAP_STORE_NAME, { keyPath: KEY_PATH });\n        }\n      });\n    }\n  }, {\n    key: 'add',\n    value: function add(storeName, key, item) {\n      var _this = this;\n\n      return this.dbPromise.then(function (db) {\n        DBManager._logger.debug('add');\n        var tx = db.transaction(storeName, 'readwrite');\n        var store = tx.objectStore(storeName);\n        _this._addConfigToItem(item);\n        item[KEY_PATH] = key;\n        store.put(item);\n        return tx.complete;\n      }).then(function () {\n        //console.log('added item ' + key);\n      });\n    }\n  }, {\n    key: 'remove',\n    value: function remove(storeName, key) {\n      return this.dbPromise.then(function (db) {\n        DBManager._logger.debug('remove');\n        var tx = db.transaction(storeName, 'readwrite');\n        tx.objectStore(storeName).delete(key);\n        return tx.complete;\n      });\n    }\n  }, {\n    key: 'get',\n    value: function get(storeName, entryId) {\n      return this.dbPromise.then(function (db) {\n        DBManager._logger.debug('get', entryId);\n        return db.transaction(storeName).objectStore(storeName).get(entryId);\n      }).then(function (obj) {\n        return obj;\n      });\n    }\n  }, {\n    key: 'getAll',\n    value: function getAll(storeName) {\n      return this.dbPromise.then(function (db) {\n        DBManager._logger.debug('getAll');\n        return db.transaction(storeName).objectStore(storeName).getAll();\n      }).then(function (allObjs) {\n        return allObjs;\n      });\n    }\n  }, {\n    key: 'removeAll',\n    value: function removeAll(store) {\n      return store; //TODO implement\n    }\n  }, {\n    key: 'update',\n    value: function update(store, key, value) {\n      DBManager._logger.debug('update');\n      return this.add(store, key, value);\n    }\n  }, {\n    key: '_addConfigToItem',\n    value: function _addConfigToItem(item) {\n      for (var key in this.config) {\n        item[key] = this.config[key];\n      }\n    }\n  }]);\n\n  return DBManager;\n}();\n\nDBManager._logger = (0, _logger2.default)('DBManager');\nexports.default = DBManager;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (true) {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Logger),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// playkit-offline-manager.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fa7b71a4447b20cbd7da","//@flow\nimport * as JsLogger from 'js-logger';\n\nexport type LogLevelObject = { value: number, name: string };\nexport type LogLevelType = { [level: string]: LogLevelObject };\n\nconst LogLevel: LogLevelType = {\n  DEBUG: JsLogger.DEBUG,\n  INFO: JsLogger.INFO,\n  TIME: JsLogger.TIME,\n  WARN: JsLogger.WARN,\n  ERROR: JsLogger.ERROR,\n  OFF: JsLogger.OFF\n};\n\nJsLogger.useDefaults({defaultLevel: JsLogger.ERROR});\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  if (!name) {\n    return JsLogger;\n  }\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name?: string): LogLevelObject {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: LogLevelObject, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {LogLevel, getLogLevel, setLogLevel};\n\n\n\n// WEBPACK FOOTER //\n// ./utils/logger.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"playkit\",\"core\"]}\n// module id = 1\n// module chunks = 0","// @flow\nimport OfflineManager from './offline-manager'\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nexport default OfflineManager;\nexport {__VERSION__ as VERSION, __NAME__ as NAME};\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// @flow\nimport {ShakaOfflineWrapper,PROGRESS_EVENT} from \"./shaka-offline-wrapper\";\nimport {Provider} from 'playkit-js-providers';\nimport {Utils,FakeEventTarget,EventManager} from 'playkit-js';\nimport getLogger, {setLogLevel, LogLevel} from './utils/logger'\n/**\n * Your class description.\n * @classdesc\n */\nexport default class OfflineManager extends FakeEventTarget{\n\n  static _logger: any = getLogger('OfflineManager');\n\n  /**\n   * TODO: Define under what conditions the plugin is valid.\n   * @static\n   * @public\n   * @returns {boolean} - Whether the plugin is valid.\n   */\n  static isValid(): boolean {\n    return true;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} config - The plugin config.\n   */\n  constructor(config) {\n    if (config.logLevel && LogLevel[config.logLevel]) {\n      setLogLevel(LogLevel[config.logLevel]);\n    }\n    OfflineManager._logger.debug('offline manager created');\n    super();\n    if (this._downloads){\n      return;\n    }\n    // this.config = config;\n    this._downloads = {};\n    this._config = config;\n    this._eventManager = new EventManager();\n    this._setOfflineAdapter();\n  }\n\n  _setOfflineAdapter(): void{\n      this._offlineManager = new ShakaOfflineWrapper(this._downloads, this._config);\n      this._eventManager.listen(this._offlineManager,PROGRESS_EVENT,(e)=>{\n        this.dispatchEvent(e)});\n  }\n\n  getMediaInfo(mediaInfo: Object): Promise<*>{\n    OfflineManager._logger.debug('getMediaInfo', mediaInfo.entryId);\n    return new Promise((resolve, reject)=>{\n      if (this._downloads[mediaInfo.entryId]){\n        return resolve(this._downloads[mediaInfo.entryId].sources.dash[0]);\n      }\n      const provider = new Provider(this._config.provider);\n      return provider.getMediaConfig(mediaInfo)\n        .then(mediaConfig => {\n          OfflineManager._logger.debug('after provider.getMediaConfig');\n          if( Utils.Object.hasPropertyPath(mediaConfig, 'sources.dash') && mediaConfig.sources.dash.length > 0){\n            let sourceData = mediaConfig.sources.dash[0];\n            sourceData.entryId = mediaInfo.entryId;\n            this._downloads[mediaInfo.entryId] = mediaConfig;\n            return resolve(sourceData);\n          }else{\n            OfflineManager._logger.debug('getMediaInfo error');\n            return reject(\"getMediaInfo error\");\n          }\n        });\n    })\n  }\n\n  pause(entryId): Promise<*>{\n    OfflineManager._logger.debug('pause',entryId );\n    return this._offlineManager.pause(entryId);\n  }\n\n  resume(entryId): Promise<*>{\n    OfflineManager._logger.debug('resume', entryId);\n    return this._offlineManager.resume(entryId);\n  }\n\n  download(url: string, options: Object): Promise<*>{\n    OfflineManager._logger.debug('download', url);\n    return this._offlineManager.download(url, options);\n  }\n\n  remove(entryId: string): Promise<*>{\n    OfflineManager._logger.debug('remove', entryId);\n    return this._offlineManager.remove(entryId);\n  }\n\n  getMediaInfoFromDB(entryId: string): Promise<*>{\n    OfflineManager._logger.debug('getMediaInfoFromDB', entryId);\n    return this._offlineManager.getDataByEntry(entryId);\n  }\n\n  getAllDownloads(): Promise<*>{\n    return this._offlineManager.getAllDownloads();\n  }\n\n  removeAll(): Promise<*>{\n    let promises = [];\n    return this.getAllDownloads().then(downloads => {\n      downloads.forEach(download => {\n        promises.push(this.remove(download.entryId));\n      });\n      this._downloads = {};\n      return Promise.all(promises);\n    });\n  }\n\n  pauseAll(): Promise<*>{\n    let promises = [];\n    return this.getAllDownloads().then(downloads => {\n      downloads.forEach(download => {\n        promises.push(this.pause(download.entryId));\n      });\n      return Promise.all(promises);\n    });\n  }\n\n  /**\n   * TODO: Define the destroy logic of your plugin.\n   * Destroys the plugin.\n   * @override\n   * @public\n   * @returns {void}\n   */\n  destroy(): void {\n    // Write logic\n    this._eventManager.destroy();\n  }\n\n  /**\n   * TODO: Define the reset logic of your plugin.\n   * Resets the plugin.\n   * @override\n   * @public\n   * @returns {void}\n   */\n  reset(): void {\n  // Write logic\n  }\n\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./offline-manager.js","//flow\nimport shaka from 'shaka-player'\nimport DBManager from './db-manager';\nimport {FakeEventTarget,FakeEvent} from 'playkit-js'\nimport getLogger from './utils/logger'\n\nconst downloadStates = {\n  DOWNLOADING: 'downloading',\n  PAUSED: 'paused',\n  RESUMED: 'resumed',\n  ENDED: 'ended'\n};\n\nconst actions = {\n  PAUSE: 'pause',\n  RESUME: 'resume',\n  DELETE: 'delete',\n  DOWNLOAD_START: 'downloadStart',\n  DOWNLOAD_END: 'downloadEnd'\n};\n\nconst ENTRIES_MAP_STORE_NAME = 'entriesMap';\n\nexport const PROGRESS_EVENT = 'progress';\n\nexport class ShakaOfflineWrapper extends FakeEventTarget{\n\n  static _logger: any = getLogger('ShakaOfflineWrapper');\n\n  constructor(downloads) {\n    super();\n    ShakaOfflineWrapper._logger.debug('ShakaOfflineWrapper created');\n    this._dtgVideoElement = document.createElement('video');\n    shaka.polyfill.installAll();\n\n    this._dtgShaka = new shaka.Player(this._dtgVideoElement);\n    if (shaka.log) {\n      shaka.log.setLevel(shaka.log.Level.DEBUG);\n    }\n\n    this._dbManager = new DBManager({\n      adapterName: 'shaka',\n      adapterVersion: \"\",//player.version,\n      playerVersion: \"\"//player.version\n    });\n    this._downloads = downloads;\n    this._currentlyDownloaded = [];\n  }\n\n  download(entryId: String, options): Promise<*> {\n    ShakaOfflineWrapper._logger.debug('download', entryId);\n    let currentDownload = this._downloads[entryId];\n    if (currentDownload.state){\n      return Promise.reject(\"already downloading / resuming / paused\");\n    }\n    this._configureDrmIfNeeded(entryId);\n    this._currentlyDownloaded.push(entryId);\n    this._doesEntryExists(entryId).then((existsInDB)=> {\n        if (existsInDB) {\n          return Promise.reject(\"already downloading / paused\");\n        }\n        currentDownload['storage'] = this._initStorage(entryId,options);\n        currentDownload['state'] = downloadStates.DOWNLOADING;\n        return currentDownload.storage.store(currentDownload.sources.dash[0].url, {}).then(offlineManifest => {\n          ShakaOfflineWrapper._logger.debug('after storage.store', entryId);\n          currentDownload.state = offlineManifest.downloadStatus === downloadStates.PAUSED ? downloadStates.PAUSED : downloadStates.ENDED;\n          currentDownload.sources.dash[0].url = offlineManifest.offlineUri;\n          return this._dbManager.add(ENTRIES_MAP_STORE_NAME, entryId, this._prepareItemForStorage(currentDownload)).then(() => {\n            ShakaOfflineWrapper._logger.debug('after dbManager.add', entryId);\n            Promise.resolve({\n              action: actions.DOWNLOAD_START,\n              entryId: entryId\n            });\n          });\n        })\n    }).catch((e) => {\n      Promise.reject(e);\n    });\n  }\n\n\n  pause(entryId: string): Promise<*> {\n    ShakaOfflineWrapper._logger.debug('pause', entryId);\n    let currentDownload = this._downloads[entryId];\n    if (!currentDownload) {\n      return Promise.resolve(\"not downloading / resuming\"); //TODO LOG THIS (until background fetch is here)\n    } else {\n      if ([downloadStates.DOWNLOADING, downloadStates.RESUMED].includes(currentDownload.state)) {\n        return currentDownload.storage.pause().then(() => {\n          ShakaOfflineWrapper._logger.debug('after storage.pause', entryId);\n          currentDownload.state = downloadStates.PAUSED;\n          return this._dbManager.update(ENTRIES_MAP_STORE_NAME, entryId, this._prepareItemForStorage(currentDownload)).then(() => {\n            ShakaOfflineWrapper._logger.debug('after dbManager.update', entryId);\n            Promise.resolve({\n              entryId: entryId,\n              action: actions.PAUSE\n            });\n          });\n        }).catch((e) => {\n          Promise.reject(e);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n  }\n\n  resume(entryId: string): Promise<*> {\n    ShakaOfflineWrapper._logger.debug('resume', entryId);\n    return this._setSessionData(entryId).then(() => {\n      let currentDownload = this._downloads[entryId];\n      if (currentDownload.state === downloadStates.PAUSED) {\n        currentDownload.state = downloadStates.RESUMED;\n        currentDownload.storage.resume(currentDownload.sources.dash[0].url).then((manifestDB) => {\n          ShakaOfflineWrapper._logger.debug('after storage.resume', entryId);\n          currentDownload.state = [manifestDB.downloadStatus,manifestDB.ob].includes(downloadStates.ENDED) ? downloadStates.ENDED : downloadStates.PAUSED;\n          this._dbManager.update(ENTRIES_MAP_STORE_NAME, entryId, this._prepareItemForStorage(currentDownload)).then(() => {\n            ShakaOfflineWrapper._logger.debug('after dbManager.update', entryId);\n            return Promise.resolve({\n              action: actions.RESUME,\n              entryId: entryId\n            });\n          })\n        });\n      } else {\n        Promise.reject(\"already resumed / downloaded\");\n      }\n    }).catch((e) => {\n      Promise.reject(e);\n    });\n  }\n\n\n  remove(entryId): Promise<*> {\n    ShakaOfflineWrapper._logger.debug('remove', entryId);\n    return this._setSessionData(entryId).then(() => {\n      let currentDownload = this._downloads[entryId];\n      if (!currentDownload.state) return Promise.reject(\"Entry not found\");\n      currentDownload.storage.remove(currentDownload.sources.dash[0].url).then(() => {\n        ShakaOfflineWrapper._logger.debug('after storage.remove', entryId);\n        this._dbManager.remove(ENTRIES_MAP_STORE_NAME, entryId).then(() => {\n          ShakaOfflineWrapper._logger.debug('after dbManager.remove', entryId);\n          delete this._downloads[entryId];\n          return Promise.resolve({\n            action: actions.DELETED,\n            entryId: entryId\n          });\n        })\n      });\n\n    }).catch((e) => {\n      Promise.reject(e);\n    });\n  }\n\n  getDataByEntry(entryId): Promise<*> {\n    return this._dbManager.get(ENTRIES_MAP_STORE_NAME, entryId);\n  }\n\n  getAllDownloads(): Promise<*> {\n    return this._dbManager.getAll(ENTRIES_MAP_STORE_NAME);\n  }\n\n  _doesEntryExists(entryId): Promise<*> {\n    return this.getDataByEntry(entryId).then((entry) => {\n      return Promise.resolve(entry && entry.state);\n    })\n  }\n\n  _configureDrmIfNeeded(entryId) {\n    ShakaOfflineWrapper._logger.debug('_configureDrmIfNeeded', entryId);\n    let currentDownload = this._downloads[entryId];\n    const drmData = currentDownload.sources.dash[0].drmData;\n    if (drmData) {\n      let servers = {};\n      drmData.forEach((val) => {\n        servers[val.scheme] = val.licenseUrl;\n      });\n      this._dtgShaka.configure({'drm': {'servers': servers}})\n    } else {\n      this._dtgShaka.configure({});\n    }\n  }\n\n\n  _prepareItemForStorage(object) {\n    const keysToDelete = [\"storage\", \"url\", \"mimetype\"];\n    let storeObj = Object.assign({}, object);\n    for (let key in storeObj) {\n      if (keysToDelete.includes(key)) {\n        delete storeObj[key];\n      }\n    }\n    return storeObj;\n  }\n\n\n  _setSessionData(entryId): Promise<*> {\n    ShakaOfflineWrapper._logger.debug('_setSessionData', entryId);\n    if (this._downloads[entryId]) {\n      return Promise.resolve();\n    }\n    return this.getDataByEntry(entryId).then(dbData => {\n      let data = Object.assign({}, dbData);\n      data['storage'] = this._initStorage(entryId);\n      this._downloads[entryId] = data;\n      return Promise.resolve();\n    });\n  }\n\n\n  _initStorage(entryId, options = {}) {\n    ShakaOfflineWrapper._logger.debug('_initStorage', entryId);\n    let storage = new shaka.offline.Storage(this._dtgShaka);\n    let configuration = {\n      usePersistentLicense: true,\n      progressCallback: this._setDownloadProgress(entryId),\n    };\n    if (options && options.trackSelectionCallback){\n      configuration[\"trackSelectionCallback\"] = options.trackSelectionCallback;\n    }\n    storage.configure(configuration);\n    return storage;\n  }\n\n  _setDownloadProgress(entryId) {\n    ShakaOfflineWrapper._logger.debug('_setDownloadProgress', entryId);\n    return (content, progress) => {\n      let event = new FakeEvent(PROGRESS_EVENT, {\n        detail: {\n          content: content,\n          progress: progress * 100,\n          entryId: entryId\n        }\n      });\n      this.dispatchEvent(event);\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./shaka-offline-wrapper.js","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"shaka-player\",\"commonjs2\":\"shaka-player\",\"amd\":\"shaka-player\",\"root\":\"shaka\"}\n// module id = 5\n// module chunks = 0","// @flow\nimport idb from 'idb'\nimport getLogger from \"./utils/logger\";\n\nconst KEY_PATH: string = 'entryId';\nconst ENTRIES_MAP_STORE_NAME: string = 'entriesMap';\nconst DB_NAME: string = 'offline-manager'\n/**\n * Your class description.\n * @classdesc\n */\nexport default class DBManager{\n\n  static _logger: any = getLogger('DBManager');\n  /**\n   * @constructor\n   * @param {Object} config - The plugin config.\n   */\n  constructor(config: Object) {\n    DBManager._logger.debug('DBManager created');\n    if (!('indexedDB' in window)) {\n     // console.log('This browser doesn\\'t support IndexedDB');\n      return;\n    }\n    this.config = config;\n    this.open(DB_NAME);\n  }\n\n  open(store){\n    this.dbPromise = idb.open(store, 1, (upgradeDb)=>{\n      DBManager._logger.debug('open');\n      if (!upgradeDb.objectStoreNames.contains(ENTRIES_MAP_STORE_NAME)) {\n        upgradeDb.createObjectStore(ENTRIES_MAP_STORE_NAME, {keyPath: KEY_PATH});\n      }\n    });\n  }\n\n  add(storeName, key ,item){\n    return this.dbPromise.then(db => {\n      DBManager._logger.debug('add');\n      let tx = db.transaction(storeName, 'readwrite');\n      let store = tx.objectStore(storeName);\n      this._addConfigToItem(item);\n      item[KEY_PATH] = key;\n      store.put(item);\n      return tx.complete;\n    }).then(()=> {\n      //console.log('added item ' + key);\n    });\n  }\n\n  remove(storeName,key){\n    return this.dbPromise.then(db => {\n      DBManager._logger.debug('remove');\n      const tx = db.transaction(storeName, 'readwrite');\n      tx.objectStore(storeName).delete(key);\n      return tx.complete;\n    });\n  }\n\n  get(storeName, entryId){\n    return this.dbPromise.then(db => {\n      DBManager._logger.debug('get', entryId);\n      return db.transaction(storeName)\n        .objectStore(storeName).get(entryId);\n    }).then(obj =>{\n      return obj;\n    });\n  }\n\n  getAll(storeName){\n    return this.dbPromise.then(db => {\n      DBManager._logger.debug('getAll');\n      return db.transaction(storeName)\n        .objectStore(storeName).getAll();\n    }).then(allObjs => {\n      return allObjs;\n    });\n  }\n\n  removeAll(store){\n    return store; //TODO implement\n  }\n\n  update(store,key,value){\n    DBManager._logger.debug('update');\n    return this.add(store,key,value);\n  }\n\n  _addConfigToItem(item){\n    for (let key in this.config){\n      item[key] = this.config[key];\n    }\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./db-manager.js","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/idb/lib/idb.js\n// module id = 7\n// module chunks = 0","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/js-logger/src/logger.js\n// module id = 8\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js-providers\",\"commonjs2\":\"playkit-js-providers\",\"amd\":\"playkit-js-providers\",\"root\":[\"playkit\",\"providers\"]}\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}